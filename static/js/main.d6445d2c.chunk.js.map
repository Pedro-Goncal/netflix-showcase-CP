{"version":3,"sources":["requests.js","axios.js","Components/Row/Row.js","Components/Banner/Banner.js","Components/Firebase.js","Components/Nav/Nav.js","Components/Home/Home.js","Components/Login/Login.js","Components/SignUp/SignUp.js","App.js","serviceWorker.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","key","id","onClick","url","fetch","then","response","json","catch","err","console","log","handleClick","src","poster_path","backdrop_path","alt","name","videoId","opts","height","width","playerVars","autoplay","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","auth","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","facebookAuth","FacebookAuthProvider","Nav","user","show","handleShow","window","addEventListener","scrollY","removeEventListener","to","signOut","email","Home","setUser","onAuthStateChanged","authUser","Login","setEmail","password","setPassword","history","useHistory","facebook","e","preventDefault","signInWithPopup","push","error","alert","credentrial","value","onChange","target","type","placeholder","signInWithEmailAndPassword","message","createUserWithEmailAndPassword","App","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d6445d2c.chunk.js","sourcesContent":["const API_KEY = \"947b0f0af52c9b74afa43eed2267820d\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import axios from \"axios\";\r\n\r\n//base url to make requests to the movie database\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance;\r\n\r\n/*\r\nExplanation:\r\n\r\ninstance.get('/foo-bar');\r\n   what we get is \r\n\r\nhttps://api.themoviewdb.org/3/foo-bar\r\n\r\n\r\n*/\r\n","import React, { useState, useEffect } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport axios from \"../../axios\"; //called axios but in reality is importing the instance function\r\nimport \"./Row.css\";\r\n\r\nconst baseImg_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      const url = `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=947b0f0af52c9b74afa43eed2267820d&language=en-US`;\r\n      fetch(url)\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          setTrailerUrl(data.results[0].key);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  };\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      //https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"row__title\">{title}</h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            src={`${baseImg_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n\r\n/*\r\nWe pass props isLargeRow only on the component we want it to be\r\n\r\nwe then on the src... we check if isLargeRow is true and render the right image\r\n\r\nand on the class name, we check if isLargeRow is true and give it an additional className that we can style diferently\r\n\r\n*/\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"../../axios\";\r\nimport requests from \"../../requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  //It extracts part of a string passed into the function, if its bigger then a specified amount\r\n  //We pass in the movie long description, and a limit of charaters\r\n  //It checks if the description is longer then the set amount, and it substr(to the amount we want)\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n           \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n           )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA1C1mNg22z97wzKh2oBbSMZRUNKg0LqSU\",\r\n  authDomain: \"netflix-clone-project-703bd.firebaseapp.com\",\r\n  databaseURL: \"https://netflix-clone-project-703bd.firebaseio.com\",\r\n  projectId: \"netflix-clone-project-703bd\",\r\n  storageBucket: \"netflix-clone-project-703bd.appspot.com\",\r\n  messagingSenderId: \"282684682805\",\r\n  appId: \"1:282684682805:web:bca1204233b970c854777c\",\r\n  measurementId: \"G-6WHVPSX718\",\r\n};\r\n\r\n//Initialized firebase\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n//Initialize the db\r\nconst db = firebaseApp.firestore();\r\n\r\n//Initialize the authentication\r\nconst auth = firebase.auth();\r\n\r\n// const provider = new firebase.auth.GoogleAuthProvider();\r\nconst facebookAuth = new firebase.auth.FacebookAuthProvider();\r\n\r\nexport { db, auth, facebookAuth };\r\n\r\n//Firebase website... project setting, scroll to the bottom, click config and copy it to firebase.js\r\n\r\n//Install Firebase in the project - npm install firebase\r\n\r\n//\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth } from \"../Firebase\";\r\n\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav({ user }) {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 200) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", window);\r\n    };\r\n  }, []);\r\n\r\n  const handleAuthentication = () => {\r\n    if (user) {\r\n      auth.signOut();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <Link to=\"/login\">\r\n        <img\r\n          onClick={handleAuthentication}\r\n          className=\"nav__avatar\"\r\n          src=\"https://learning.royalbcmuseum.bc.ca/wp-content/uploads/2014/07/netflix-face.jpg\"\r\n          alt=\"Netflix avatar\"\r\n        />\r\n\r\n        <div className=\"nav__username\">\r\n          <p>{user ? `Hello ${user.email}` : \"Sign in\"}</p>\r\n          <p>{user ? \"Sign out\" : null}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport requests from \"../../requests\";\r\nimport Row from \"../Row/Row\";\r\nimport Banner from \"../Banner/Banner\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport { auth } from \"../Firebase\";\r\n\r\nimport \"./Home.css\";\r\n\r\nfunction Home() {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged((authUser) => {\r\n      if (authUser) {\r\n        setUser(authUser);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Nav user={user} />\r\n      <Banner />\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow={true}\r\n      />\r\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth, facebookAuth } from \"../Firebase\";\r\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\r\n\r\nimport \"./Login.css\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth);\r\n        if (auth) {\r\n          //If register successful it will redirect to homepage\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const facebook = async (e) => {\r\n    e.preventDefault();\r\n    await auth\r\n      .signInWithPopup(facebookAuth)\r\n      .then((auth) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => alert(error.credentrial));\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginlogin\">\r\n      <div className=\"login__banner\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"nav__logo__login\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\r\n            alt=\"Netflix Logo\"\r\n          />\r\n        </Link>\r\n      </div>\r\n      <div className=\"login\">\r\n        <div className=\"login__container\">\r\n          <h1>Sign in</h1>\r\n          <form>\r\n            <input\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Email or phone number\"\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <button\r\n              onClick={signIn}\r\n              type=\"submit\"\r\n              className=\"login__signinButton\"\r\n            >\r\n              Sign In\r\n            </button>\r\n            <div className=\"login__checkbox\">\r\n              <div>\r\n                <input type=\"checkbox\" />\r\n                <label>Remember me</label>\r\n              </div>\r\n              <p>Need help?</p>\r\n            </div>\r\n          </form>\r\n          <div className=\"login__container__bottom\">\r\n            <div className=\"login__facebook\">\r\n              <FacebookIcon className=\"facebook__icon\" />\r\n              <p onClick={facebook}>Log in with Facebook</p>\r\n            </div>\r\n            <div className=\"login__container__bottom__signup\">\r\n              <p>\r\n                New to Netflix? <span onClick={register}>Sign up now</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"login__container__bottom__captcha\">\r\n              <p>\r\n                This page is protected by Google reCAPTCHA to ensure you're not\r\n                a bot.{\" \"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n//Video (Day 3 - 1h20m)\r\n","import React, { useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { auth } from \"../Firebase\";\r\n\r\nimport \"./SignUp.css\";\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const signIn = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  const register = (e) => {\r\n    e.preventDefault();\r\n\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((auth) => {\r\n        console.log(auth);\r\n        if (auth) {\r\n          //If register successful it will redirect to homepage\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((error) => alert(error.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <div className=\"signup__banner\">\r\n        <div>\r\n          <Link to=\"/\">\r\n            <img\r\n              className=\"nav__logoSignup\"\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\r\n              alt=\"Netflix Logo\"\r\n            />\r\n          </Link>\r\n        </div>\r\n        <div>\r\n          <Link to=\"/login\">\r\n            <button>Sign In</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <div className=\"signup__menu\">\r\n        <div className=\"signup__container\">\r\n          <h1>Unlimited movies, TV shows, and more.</h1>\r\n          <h2>Whatch anywhere. Cancel anytime.</h2>\r\n          <form>\r\n            <h3>\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership.\r\n            </h3>\r\n            <div className=\"signup__inputes\">\r\n              <input\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"Email or phone number\"\r\n              />\r\n\r\n              <input\r\n                type=\"password\"\r\n                value={password}\r\n                placeholder=\"Password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n\r\n              <button\r\n                onClick={signIn}\r\n                type=\"submit\"\r\n                className=\"signup__signinButton\"\r\n              >\r\n                TRY 30 DAYS FREE >\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n//Video (Day 3 - 1h20m)\r\n","import React from \"react\";\nimport Home from \"./Components/Home/Home\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Login from \"./Components/Login/Login\";\nimport SignUp from \"./Components/SignUp/SignUp\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n/*\nnpm i react-youtube\n\nnpm i movie-trailer\n*/\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}